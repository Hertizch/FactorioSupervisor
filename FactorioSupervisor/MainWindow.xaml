<Window x:Name="WindowRoot"
        x:Class="FactorioSupervisor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:FactorioSupervisor.Resources.Controls"
        xmlns:conv="clr-namespace:FactorioSupervisor.Converters"
        xmlns:snackbarConverters="clr-namespace:FactorioSupervisor.Converters.SnackbarValueConverters"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:ext="clr-namespace:FactorioSupervisor.Extensions"
        mc:Ignorable="d"
        Height="{Binding Path=ConfigVm.UiDimHeight, Mode=TwoWay}" Width="{Binding Path=ConfigVm.UiDimWidth, Mode=TwoWay}"
        Left="{Binding Path=ConfigVm.UiPosLeft, Mode=TwoWay}" Top="{Binding Path=ConfigVm.UiPosTop, Mode=TwoWay}"
        WindowStartupLocation="Manual"
        DataContext="{StaticResource BaseVm}"
        Style="{StaticResource MainWindow}"
        PreviewKeyDown="WindowRoot_PreviewKeyDown">

    <i:Interaction.Triggers>
        <i:EventTrigger SourceObject="{Binding ElementName=WindowRoot}" EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Path=ModsVm.VerifyAuthenticationCmd}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <conv:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter" />
        <conv:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
        <conv:InvertedBooleanMultiConverter x:Key="InvertedBooleanMultiConverter" />
        <conv:IsUpdatingToNotifyValueConverter x:Key="IsUpdatingToNotifyValueConverter" />
        <conv:NotifyBannerVisibilityMultiConverter x:Key="NotifyBannerVisibilityMultiConverter" />

        <CollectionViewSource x:Key="ModsVs" Source="{Binding Path=ModsVm.Mods}" IsLiveFilteringRequested="True" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Title" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.LiveFilteringProperties>
                <system:String>Title</system:String>
                <system:String>Name</system:String>
            </CollectionViewSource.LiveFilteringProperties>
        </CollectionViewSource>

        <CollectionViewSource x:Key="DependenciesVs" Source="{Binding Path=ModsVm.SelectedMod.DependenciesCollection}" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="IsOptional" />
                <componentModel:SortDescription PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Titlebar -->
            <Grid Background="{StaticResource Color_TopTitlebarBackground}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <c:IconToggleButton x:Name="SettingsButton" Style="{StaticResource SettingsButton}" IsChecked="False" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <c:IconButton Style="{StaticResource TitlebarUiButton}" Icon="{StaticResource IconMinimize}" Click="MinimizeButton_OnClick" />
                        <c:IconButton Style="{StaticResource TitlebarUiButton}" Icon="{StaticResource IconClose}" Click="CloseButton_OnClick" />
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Root - Content -->
            <Grid Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=ConfigVm.UiDimModListWidth, Mode=TwoWay}" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="{Binding Path=ConfigVm.UiDimModDetailsWidth, Mode=TwoWay}" />
                </Grid.ColumnDefinitions>

                <!-- Left column -->
                <Grid Background="{StaticResource Color_ModListColumnBackground}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="35" />
                        <RowDefinition Height="1" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!-- Search box -->
                    <TextBox x:Name="SearchTextBox" Style="{StaticResource SearchTextBox}" Text="{Binding ElementName=WindowRoot, Path=SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=50}" >
                    </TextBox>

                    <Grid Grid.Row="1" Background="{StaticResource Color_BaseBackground}" />

                    <Grid Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal">

                            <!-- profiles button -->
                            <ComboBox x:Name="ProfilesComboBox" Style="{StaticResource ProfilesComboBox}" ItemContainerStyle="{StaticResource ProfilesComboBoxItem}" ItemsSource="{Binding Path=ProfilesVm.Profiles}" DisplayMemberPath="Name" SelectedItem="{Binding Path=ProfilesVm.SelectedProfile, Mode=OneWay}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger SourceObject="{Binding ElementName=ProfilesComboBox}" EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding Path=ProfilesVm.SwitchProfileCmd}" CommandParameter="{Binding ElementName=ProfilesComboBox, Path=SelectedItem}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <!-- check updates button -->
                            <Button>
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource InvertedBooleanMultiConverter}">
                                        <Binding Path="ModsVm.IsUpdating" />
                                        <Binding Path="ModsVm.IsCheckingForUpdates" />
                                    </MultiBinding>
                                </Button.IsEnabled>
                                <Button.Style>
                                    <Style BasedOn="{StaticResource ModUpdateButton}" TargetType="{x:Type Button}">
                                        <Setter Property="Content" Value="{StaticResource IconCheckUpdate}" />
                                        <Setter Property="Command" Value="{Binding Path=ModsVm.GetModRemoteDataCmd}" />
                                        <Setter Property="ToolTip" Value="Check for updates" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ModsVm.IsUpdatesAvailable}" Value="True">
                                                <Setter Property="Content" Value="{StaticResource IconDownload}" />
                                                <Setter Property="Command" Value="{Binding Path=ModsVm.DownloadModCmd}" />
                                                <Setter Property="ToolTip" Value="Download updates" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <TextBlock Text="{Binding Path=ModsVm.TotalUpdatesAvailable, StringFormat='{}{0} updates available'}" Foreground="{StaticResource Color_Accent}" VerticalAlignment="Center" Margin="8,0,0,0" Visibility="{Binding Path=ModsVm.IsUpdatesAvailable, Converter={StaticResource ValueToVisibilityConverter}}" />

                            <!-- test buttons -->
                            <c:IconButton Style="{StaticResource SubTitlebarButton}" Icon="{StaticResource IconImport}" Command="{Binding Path=ConfigVm.TestMessageBoxWindowCmd}" Visibility="Collapsed" />
                            <ToggleButton Content="SB" IsChecked="{Binding ElementName=UpdaterSnackbar, Path=IsOpen, Mode=TwoWay}" Click="ToggleButton_Click" Visibility="Collapsed" />

                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">

                            <!-- options button -->
                            <ComboBox Style="{StaticResource OptionsComboBox}" ItemContainerStyle="{StaticResource OptionsComboBoxItem}">
                                <ComboBox.Items>
                                    <CheckBox Style="{StaticResource SettingsCheckBox}" Content="Hide incompatible mods" IsChecked="{Binding Path=ModsVm.HideIncompatibleMods, Mode=TwoWay}" ToolTip="Hides mods that are not currently compatible with your branch of factorio" />
                                </ComboBox.Items>
                            </ComboBox>
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="3" Background="{StaticResource Color_BaseBackground}" />

                    <!-- Mod list -->
                    <ScrollViewer Grid.Row="4" Style="{StaticResource DefaultScrollViewerStyle}">
                        <ListBox x:Name="ModsListBox" Style="{StaticResource GenericListBox}" ItemContainerStyle="{StaticResource GenericListBoxItem}" 
                                 ItemsSource="{Binding Source={StaticResource ModsVs}}" SelectedItem="{Binding Path=ModsVm.SelectedMod, Mode=TwoWay}" 
                                 PreviewMouseDoubleClick="ListBox_PreviewMouseDoubleClick" PreviewKeyDown="ModsListBox_PreviewKeyDown">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10,5,10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Path=IsEnabled, Mode=TwoWay}">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource GenericCheckBox}" TargetType="{x:Type CheckBox}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                            <TextBlock Text="{Binding Path=Title}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource Color_Error}" />
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsUpdating}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource Color_Update}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Text="{Binding Path=ProgressPercentage, StringFormat={} - Updating {0}%}" Visibility="{Binding Path=IsUpdating, Converter={StaticResource ValueToVisibilityConverter}}" Foreground="Yellow" />
                                        </StackPanel>
                                        <Viewbox Grid.Column="1" Width="12" Visibility="{Binding Path=UpdateAvailable, Converter={StaticResource ValueToVisibilityConverter}}" ToolTip="Update available!">
                                            <Path Data="{StaticResource IconExclamation}" Fill="Yellow" />
                                        </Viewbox>
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=HideInModList}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=ModsVm.DeleteModCmd}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </ScrollViewer>
                </Grid>

                <!-- Gridsplitter -->
                <GridSplitter Style="{StaticResource GenericGridSplitter}" Grid.Column="1" HorizontalAlignment="Center" />

                <!-- Right column -->
                <Grid Column="2">

                    <!-- Mod details -->
                    <ScrollViewer Style="{StaticResource DefaultScrollViewerStyle}" Visibility="{Binding Path=ModsVm.SelectedMod, Converter={StaticResource ValueToVisibilityConverter}}">
                        <StackPanel Margin="40,35,30,0">
                            <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.Title, FallbackValue=Title}" />

                            <!-- description -->
                            <TextBlock TextWrapping="Wrap" Margin="0,25,0,40">
                                <Run>
                                    <Run.Style>
                                        <Style TargetType="{x:Type Run}">
                                            <Setter Property="Text" Value="{Binding Path=ModsVm.SelectedMod.Description, FallbackValue=Description}" />
                                            <Setter Property="Foreground" Value="{StaticResource Color_Text40}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.HasError}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource Color_Error}" />
                                                    <Setter Property="Text" Value="There's an error with this mod. It's not a valid mod archive or the mod-info.json file within is missing, corrupt or contains formatting errors." />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run>
                                <Hyperlink Command="{Binding Path=ModsVm.OpenHyperlinkCmd}" CommandParameter="portalpage" Foreground="{StaticResource Color_Accent}">
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="{x:Type Run}">
                                                <Setter Property="Text" Value="More info..." />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.HasError}" Value="True">
                                                        <Setter Property="Text" Value="{x:Null}" />
                                                </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Foreground="{StaticResource Color_Error}" TextWrapping="Wrap" Text="{Binding Path=ModsVm.SelectedMod.FullName, StringFormat={}Path: {0}}" Visibility="{Binding Path=ModsVm.SelectedMod.HasError, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0,0,0,40" />

                            <Grid Visibility="{Binding Path=ModsVm.SelectedMod.InstalledVersion, Converter={StaticResource ValueToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <!-- Latest version -->
                                <TextBlock Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Latest version" Visibility="{Binding Path=ModsVm.SelectedMod.UpdateAvailable, Converter={StaticResource ValueToVisibilityConverter}}" />
                                <StackPanel Grid.Column="1" Margin="0,0,0,12" Visibility="{Binding Path=ModsVm.SelectedMod.UpdateAvailable, Converter={StaticResource ValueToVisibilityConverter}}">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Path=ModsVm.SelectedMod.RemoteVersion, FallbackValue=Version, TargetNullValue=N/A}" Margin="0,0,0,4" FontSize="14">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource PropertyValueTextBlock}" TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.UpdateAvailable}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource Color_Update}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.ReleasedAt, StringFormat='{}Released: {0}'}" Visibility="{Binding Path=ModsVm.SelectedMod.RemoteVersion, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0" />
                                        <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.RemoteFactorioVersion, StringFormat='{}For Factorio: {0}'}" Visibility="{Binding Path=ModsVm.SelectedMod.RemoteFactorioVersion, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0" />
                                    </StackPanel>
                                </StackPanel>

                                <!-- mod info -->
                                <TextBlock Grid.Row="1" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Mod info" />
                                <StackPanel Grid.Row="1" Grid.Column="1" Margin="0,0,0,12">

                                    <!-- installed version -->
                                    <StackPanel>
                                        <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Installed version" />
                                        <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.InstalledVersion, FallbackValue=Version}" />
                                    </StackPanel>

                                    <!-- factorio version -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Factorio version" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.FactorioVersion, FallbackValue=Version}" />

                                    <!-- author -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Author" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.Author, FallbackValue=Author}" />

                                    <!-- homepage -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Homepage" Visibility="{Binding Path=ModsVm.SelectedMod.Homepage, Converter={StaticResource ValueToVisibilityConverter}}" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Visibility="{Binding Path=ModsVm.SelectedMod.Homepage, Converter={StaticResource ValueToVisibilityConverter}}" Foreground="{StaticResource Color_Accent}" TextDecorations="Underline" TextTrimming="CharacterEllipsis">
                                        <Hyperlink Command="{Binding Path=ModsVm.OpenHyperlinkCmd}" CommandParameter="homepage" Foreground="{StaticResource Color_Accent}">
                                            <Run Text="{Binding Path=ModsVm.SelectedMod.Homepage, FallbackValue=Homepage}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>

                                <!-- Dependencies -->
                                <TextBlock Grid.Row="2" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Dependencies" Visibility="{Binding Path=ModsVm.SelectedMod.DependenciesCollection.Count, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0,3,0,0" />
                                <ListBox Grid.Row="2" Grid.Column="1" Style="{StaticResource GenericListBox}" ItemsSource="{Binding Source={StaticResource DependenciesVs}}" SelectedItem="{Binding Path=ModsVm.SelectedMod.SelectedDependency, Mode=TwoWay}" Visibility="{Binding Path=ModsVm.SelectedMod.DependenciesCollection.Count, Converter={StaticResource ValueToVisibilityConverter}}">
                                    <ListBox.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource DependeciesListBoxItem}" TargetType="{x:Type ListBoxItem}">
                                            <!-- null -->
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="8,3">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <StackPanel Orientation="Horizontal">

                                                    <!-- Optional -->
                                                    <TextBlock>
                                                        <TextBlock.Style>
                                                            <Style BasedOn="{StaticResource PropertyDescriptorTextBlock}" TargetType="{x:Type TextBlock}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsOptional}" Value="True">
                                                                        <Setter Property="Text" Value="?" />
                                                                        <Setter Property="Margin" Value="0,0,8,0" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <!-- Name -->
                                                    <TextBlock Text="{Binding Path=Name}" />

                                                </StackPanel>

                                                <!-- Is installed -->
                                                <TextBlock Grid.Column="1">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource PropertyDescriptorTextBlock}" TargetType="{x:Type TextBlock}">
                                                            <Setter Property="Text" Value="Not installed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsInstalled}" Value="True">
                                                                    <Setter Property="Text" Value="Installed" />
                                                                    <Setter Property="Foreground" Value="#B2FFFFFF" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Install mod" Command="{Binding Path=ModsVm.InstallDependencyModCmd}" IsEnabled="{Binding Path=ModsVm.SelectedMod.SelectedDependency.IsInstalled, Converter={StaticResource InvertedBooleanConverter}}" />
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                </ListBox>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>

            <!-- Root - Settings -->
            <ScrollViewer Grid.Row="1" Style="{StaticResource DefaultScrollViewerStyle}" Visibility="{Binding ElementName=SettingsButton, Path=IsChecked, Converter={StaticResource ValueToVisibilityConverter}}">
                <Grid Background="{StaticResource Color_BaseBackground}">
                    <Grid Margin="30,40,30,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="4*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!-- factorio settings -->
                        <TextBlock Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="{StaticResource Settings_Descriptors_FactorioSettings}" />
                        <StackPanel Grid.Column="1" Grid.Row="0" Margin="0,0,0,12">
                            <c:DescriptionTextBox DescriptionText="{StaticResource Settings_FactorioPath}" Text="{Binding Path=ConfigVm.FactorioPath, Mode=TwoWay}" />
                            <c:DescriptionTextBox DescriptionText="{StaticResource Settings_ModsFolderPath}" Text="{Binding Path=ConfigVm.ModsPath, Mode=TwoWay}" />
                            <StackPanel Margin="0,0,0,12">
                                <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="{StaticResource Settings_CurrentFactorioBranch}" />
                                <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ConfigVm.CurrentFactorioBranch, TargetNullValue=N/A}" />
                            </StackPanel>
                        </StackPanel>

                        <!-- mod portal settings -->
                        <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="{StaticResource Settings_Descriptors_ModPortalSettings}" />
                        <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,0,12">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <c:DescriptionTextBox DescriptionText="{StaticResource Settings_Username}" Text="{Binding Path=ConfigVm.ModPortalUsername, Mode=TwoWay}" Margin="0,0,12,0" />
                                <c:DescriptionTextBox Grid.Column="1" DescriptionText="{StaticResource Settings_AuthenticationToken}" Text="{Binding Path=ConfigVm.ModPortalAuthToken, Mode=TwoWay}" IsPasswordBox="True" />
                            </Grid>
                        </StackPanel>

                        <!-- app settings -->
                        <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="{StaticResource Settings_Descriptors_ApplicationSettings}" />
                        <StackPanel Grid.Column="1" Grid.Row="2" Margin="0,0,0,12">
                            <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" TextWrapping="Wrap" Margin="0,0,0,4" Text="{StaticResource Settings_AutoCheckModUpdate_Description}" />
                            <CheckBox Style="{StaticResource SettingsCheckBox}" IsChecked="{Binding Path=ConfigVm.AutoCheckModUpdate, Mode=TwoWay}" Content="{StaticResource Settings_AutoCheckModUpdate}" />
                            <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" TextWrapping="Wrap" Margin="0,0,0,4" Text="{StaticResource Settings_AutoDownloadModUpdate_Description}" />
                            <CheckBox Style="{StaticResource SettingsCheckBox}" IsChecked="{Binding Path=ConfigVm.AutoDownloadModUpdate, Mode=TwoWay}" Content="{StaticResource Settings_AutoDownloadModUpdate}" />
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{StaticResource DialogButton}" Content="Reset size and position of window" Command="{Binding Path=ConfigVm.ResetWindowPosDimCmd}" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </ScrollViewer>

            <!-- Notify banner -->
            <AdornerDecorator x:Name="AdornerNotify" Grid.Row="2" Height="35" Margin="0,0,0,1" Visibility="{Binding Path=NotifyBannerRelay.ShowNotifyBanner, Converter={StaticResource ValueToVisibilityConverter}}">
                <Border Background="{StaticResource Color_SnackbarBackground}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Path=NotifyBannerRelay.NotifyBannerValue}" Foreground="#7FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="25,0,0,0" />
                        <c:IconButton Grid.Column="1" Style="{StaticResource NotifyButton}" Icon="{StaticResource IconClose}" Command="{Binding Path=NotifyBannerRelay.CloseNotifyBannerCmd}" Margin="0,0,5,0" ToolTip="Close" />
                    </Grid>
                </Border>
            </AdornerDecorator>

            <!-- Snackbar -->
            <c:Snackbar x:Name="UpdaterSnackbar" Grid.Row="3" TotalProgressPercentage="{Binding Path=ModsVm.UpdateTotalProgress}" IsOpen="{Binding Path=ModsVm.IsUpdating}">
                <c:Snackbar.Resources>
                    <snackbarConverters:ProgressPercentageConverter x:Key="ProgressPercentageConverter" />
                    <snackbarConverters:TitleConverter x:Key="TitleConverter" />
                </c:Snackbar.Resources>
                <c:Snackbar.Title>
                    <MultiBinding Converter="{StaticResource TitleConverter}">
                        <Binding Path="ModsVm.IsUpdating" />
                        <Binding Path="ModsVm.CurrentUpdatingMod" />
                        <Binding Path="ModsVm.CurrentUpdatingDependency" />
                    </MultiBinding>
                </c:Snackbar.Title>
                <c:Snackbar.ItemProgressPercentage>
                    <MultiBinding Converter="{StaticResource ProgressPercentageConverter}">
                        <Binding Path="ModsVm.IsUpdating" />
                        <Binding Path="ModsVm.CurrentUpdatingMod" />
                        <Binding Path="ModsVm.CurrentUpdatingDependency" />
                    </MultiBinding>
                </c:Snackbar.ItemProgressPercentage>
            </c:Snackbar>
        </Grid>


        <c:NotifyTicker VerticalAlignment="Bottom" Title="There is no internet connection!" Margin="120,0" Visibility="Collapsed"></c:NotifyTicker>

        <!-- Progress bar -->
        <AdornerDecorator x:Name="AdornerProgressBar" VerticalAlignment="Top" Margin="0,35,0,0">
            <ProgressBar Height="1" Foreground="{StaticResource Color_Accent}" BorderBrush="Transparent" IsIndeterminate="{Binding Path=ModsVm.ShowProgressBar}" />
        </AdornerDecorator>

        <!--  Launch button  -->
        <AdornerDecorator x:Name="AdornerLaunchButton" Width="80" Height="80" Margin="0,0,64,0" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Button Style="{StaticResource LaunchButton}" Command="{Binding Path=ModsVm.LaunchFactorioCmd}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource InvertedBooleanMultiConverter}">
                        <Binding Path="ModsVm.IsUpdating" />
                        <Binding Path="ModsVm.IsCheckingForUpdates" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
        </AdornerDecorator>
    </Grid>
</Window>
