<Window x:Name="WindowRoot"
        x:Class="FactorioSupervisor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:c="clr-namespace:FactorioSupervisor.Resources.Controls"
        xmlns:conv="clr-namespace:FactorioSupervisor.Converters"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Height="{Binding Path=ConfigVm.UiDimHeight, Mode=TwoWay, Delay=1000}" Width="{Binding Path=ConfigVm.UiDimWidth, Mode=TwoWay, Delay=1000}"
        Left="{Binding Path=ConfigVm.UiPosLeft, Mode=TwoWay, Delay=1000}" Top="{Binding Path=ConfigVm.UiPosTop, Mode=TwoWay, Delay=1000}"
        WindowStartupLocation="Manual"
        DataContext="{StaticResource BaseVm}"
        Style="{StaticResource MainWindow}">

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommandHandler" />
    </Window.CommandBindings>

    <Window.Resources>
        <conv:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter" />
        <conv:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
        <conv:InvertedBooleanMultiConverter x:Key="InvertedBooleanMultiConverter" />
        <conv:IsUpdatingToNotifyValueConverter x:Key="IsUpdatingToNotifyValueConverter" />

        <CollectionViewSource x:Key="ModsVs" Source="{Binding Path=ModsVm.Mods}" IsLiveFilteringRequested="True" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Title" />
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.LiveFilteringProperties>
                <system:String>Title</system:String>
                <system:String>Name</system:String>
            </CollectionViewSource.LiveFilteringProperties>
        </CollectionViewSource>

        <CollectionViewSource x:Key="DependenciesVs" Source="{Binding Path=ModsVm.SelectedMod.DependenciesCollection}" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="IsOptional" />
                <componentModel:SortDescription PropertyName="Name" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="100" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!-- Root - Top -->
            <Grid Background="{StaticResource AccentColorDark}">
                <Grid.Effect>
                    <DropShadowEffect Direction="0" Opacity="0.5" />
                </Grid.Effect>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!-- Titlebar -->
                <Grid Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <c:IconToggleButton x:Name="SettingsButton" Style="{StaticResource SettingsButton}" MarginCustom="10" ToolTip="Settings" IsChecked="False" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                        <c:IconButton Style="{StaticResource TitlebarButton}" Icon="{StaticResource IconClose}" MarginCustom="13" Width="35" Command="ApplicationCommands.Close" />
                    </StackPanel>
                </Grid>

                <!-- Sub titlebar -->
                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="50,0,0,0" Grid.ColumnSpan="2">
                    <TextBlock Text="Factorio Supervisor" Foreground="White" FontSize="24" FontFamily="Segoe UI Semilight" />
                </StackPanel>
            </Grid>

            <!-- Progress bar top -->
            <Grid Row="1">
                <ProgressBar Height="2" VerticalAlignment="Top" Foreground="{StaticResource AccentColorLight}" Background="Transparent" BorderBrush="Transparent" IsIndeterminate="{Binding Path=ModsVm.ShowProgressBar}" />
            </Grid>

            <!-- Root - Content -->
            <Grid Row="1" Margin="20,30,20,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Path=ConfigVm.UiDimModListWidth, Mode=TwoWay, Delay=1000}" />
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="{Binding Path=ConfigVm.UiDimModDetailsWidth, Mode=TwoWay, Delay=1000}" />
                </Grid.ColumnDefinitions>

                <!-- Left column -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!-- Search box -->
                    <Grid Margin="0,0,0,12">
                        <TextBox Style="{StaticResource SearchTextBox}" Text="{Binding ElementName=WindowRoot, Path=SearchFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=50}" />
                    </Grid>

                    <Grid Row="1" Margin="0,0,0,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Height="30" Orientation="Horizontal">
                            
                            <!-- profiles button -->
                            <ComboBox x:Name="ProfilesComboBox" Style="{StaticResource ProfilesComboBox}" ItemContainerStyle="{StaticResource ProfilesComboBoxItem}" ItemsSource="{Binding Path=ProfilesVm.Profiles}" DisplayMemberPath="Name" SelectedItem="{Binding Path=ProfilesVm.SelectedProfile, Mode=OneWay}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger SourceObject="{Binding ElementName=ProfilesComboBox}" EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding Path=ProfilesVm.SwitchProfileCmd}" CommandParameter="{Binding ElementName=ProfilesComboBox, Path=SelectedItem}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>

                            <!-- check updates button -->
                            <c:IconButton Style="{StaticResource SubTitlebarButton}" Icon="{StaticResource IconCheckUpdate}" Command="{Binding Path=ModsVm.GetModRemoteDataCmd}" Width="30" ToolTip="Check for updates">
                                <c:IconButton.IsEnabled>
                                    <MultiBinding Converter="{StaticResource InvertedBooleanMultiConverter}">
                                        <Binding Path="ModsVm.IsUpdating" />
                                        <Binding Path="ModsVm.IsCheckingForUpdates" />
                                    </MultiBinding>
                                </c:IconButton.IsEnabled>
                            </c:IconButton>
                            
                            <!-- download updates button -->
                            <c:IconButton Style="{StaticResource SubTitlebarButton}" Icon="{StaticResource IconDownload}" Command="{Binding Path=ModsVm.DownloadModCmd}" Width="30" ToolTip="Update all">
                                <c:IconButton.IsEnabled>
                                    <MultiBinding Converter="{StaticResource InvertedBooleanMultiConverter}">
                                        <Binding Path="ModsVm.IsUpdating" />
                                        <Binding Path="ModsVm.IsCheckingForUpdates" />
                                    </MultiBinding>
                                </c:IconButton.IsEnabled>
                            </c:IconButton>

                            <!-- test message box button -->
                            <c:IconButton Style="{StaticResource SubTitlebarButton}" Icon="{StaticResource IconExclamation}" Command="{Binding Path=MessageBoxRelay.ShowMessageBoxCmd}" Width="30" />

                        </StackPanel>
                        <StackPanel Grid.Column="1" Height="30" Orientation="Horizontal" HorizontalAlignment="Right">
                            
                            <!-- options button -->
                            <ComboBox Style="{StaticResource OptionsComboBox}" ItemContainerStyle="{StaticResource OptionsComboBoxItem}">
                                <ComboBox.Items>
                                    <Button Content="Toggle all" Padding="5,4" Command="{Binding Path=ModsVm.ToggleEnableModsCmd}" />
                                    <Button Content="Reload mods" Padding="5,4" ToolTip="Careful..." Command="{Binding Path=ModsVm.GetLocalModsCmd}" />
                                    <CheckBox Style="{StaticResource SettingsCheckBox}" Content="Hide incompatible mods" IsChecked="{Binding Path=ModsVm.HideIncompatibleMods, Mode=TwoWay}" />
                                </ComboBox.Items>
                            </ComboBox>
                        </StackPanel>
                    </Grid>

                    <!-- Mod list -->
                    <ScrollViewer Grid.Row="3">
                        <ListBox x:Name="ModsListBox" Style="{StaticResource GenericListBox}" ItemContainerStyle="{StaticResource GenericListBoxItem}" 
                             ItemsSource="{Binding Source={StaticResource ModsVs}}" SelectedItem="{Binding Path=ModsVm.SelectedMod, Mode=TwoWay}" PreviewMouseDoubleClick="ListBox_PreviewMouseDoubleClick" PreviewKeyDown="ModsListBox_PreviewKeyDown">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="6,5,10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox IsChecked="{Binding Path=IsEnabled, Mode=TwoWay}">
                                                <CheckBox.Style>
                                                    <Style BasedOn="{StaticResource GenericCheckBox}" TargetType="{x:Type CheckBox}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </CheckBox.Style>
                                            </CheckBox>
                                            <TextBlock Text="{Binding Path=Title}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasError}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource ModErrorColor}" />
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=IsUpdating}" Value="True">
                                                                <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Text="{Binding Path=ProgressPercentage, StringFormat={} - Updating {0}%}" Visibility="{Binding Path=IsUpdating, Converter={StaticResource ValueToVisibilityConverter}}" Foreground="Yellow" />
                                        </StackPanel>
                                        <Viewbox Grid.Column="1" Width="12" Visibility="{Binding Path=UpdateAvailable, Converter={StaticResource ValueToVisibilityConverter}}" ToolTip="Update available!">
                                            <Path Data="{StaticResource IconExclamation}" Fill="Yellow" />
                                        </Viewbox>
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=HideInModList}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Delete" Command="{Binding Path=ModsVm.DeleteModCmd}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </ScrollViewer>
                </Grid>

                <!-- Gridsplitter -->
                <GridSplitter Style="{StaticResource GenericGridSplitter}" Grid.Column="1" HorizontalAlignment="Center" Margin="0,-10,0,20" />

                <!-- Right column -->
                <Grid Column="2">

                    <!-- Mod details -->
                    <ScrollViewer Margin="0,0,-15,0" Visibility="{Binding Path=ModsVm.SelectedMod, Converter={StaticResource ValueToVisibilityConverter}}">
                        <StackPanel Margin="0,0,15,0">
                            <TextBlock Style="{StaticResource HeaderTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.Title, FallbackValue=Title}" />
                            
                            <!-- description -->
                            <TextBlock TextWrapping="Wrap" Margin="0,12,0,40">
                                <Run>
                                    <Run.Style>
                                        <Style TargetType="{x:Type Run}">
                                            <Setter Property="Text" Value="{Binding Path=ModsVm.SelectedMod.Description, FallbackValue=Description}" />
                                            <Setter Property="Foreground" Value="#66FFFFFF" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.HasError}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource ModErrorColor}" />
                                                    <Setter Property="Text" Value="There's an error with this mod. It's not a valid mod archive or the mod-info.json file within is missing, corrupt or contains formatting errors." />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run>
                                <Hyperlink Command="{Binding Path=ModsVm.OpenHyperlinkCmd}" CommandParameter="portalpage" Foreground="{StaticResource AccentColorLight}">
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="{x:Type Run}">
                                                <Setter Property="Text" Value="More info..." />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.HasError}" Value="True">
                                                        <Setter Property="Text" Value="{x:Null}" />
                                                </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                </Hyperlink>
                            </TextBlock>

                            <TextBlock Foreground="{StaticResource ModErrorColor}" TextWrapping="Wrap" Text="{Binding Path=ModsVm.SelectedMod.FullName, StringFormat={}Path: {0}}" Visibility="{Binding Path=ModsVm.SelectedMod.HasError, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0,0,0,40" />

                            <Grid Visibility="{Binding Path=ModsVm.SelectedMod.InstalledVersion, Converter={StaticResource ValueToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                
                                <!-- mod info -->
                                <TextBlock Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Mod info" />
                                <StackPanel Grid.Column="1" Margin="0,0,0,12">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*" />
                                            <ColumnDefinition Width="40" />
                                            <ColumnDefinition Width="1.5*" />
                                        </Grid.ColumnDefinitions>
                                        
                                        <!-- installed version -->
                                        <StackPanel>
                                            <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Installed version" />
                                            <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.InstalledVersion, FallbackValue=Version}" />
                                        </StackPanel>

                                        <Rectangle Grid.Column="1" Width="1" Fill="#14FFFFFF" />

                                        <!-- latest version -->
                                        <StackPanel Grid.Column="2">
                                            <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Latest version" />
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=ModsVm.SelectedMod.RemoteVersion, FallbackValue=Version, TargetNullValue=N/A}">
                                                    <TextBlock.Style>
                                                        <Style BasedOn="{StaticResource PropertyValueTextBlock}" TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ModsVm.SelectedMod.UpdateAvailable}" Value="True">
                                                                    <Setter Property="Foreground" Value="{StaticResource UpdateAvailableColor}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.ReleasedAt, FallbackValue=ReleasedAt, StringFormat={}({0})}" Visibility="{Binding Path=ModsVm.SelectedMod.RemoteVersion, Converter={StaticResource ValueToVisibilityConverter}}" Margin="8,0,0,0" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>

                                    <!-- factorio version -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Factorio version" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.FactorioVersion, FallbackValue=Version}" />

                                    <!-- author -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Author" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ModsVm.SelectedMod.Author, FallbackValue=Author}" />

                                    <!-- homepage -->
                                    <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Homepage" Visibility="{Binding Path=ModsVm.SelectedMod.Homepage, Converter={StaticResource ValueToVisibilityConverter}}" />
                                    <TextBlock Style="{StaticResource PropertyValueTextBlock}" Visibility="{Binding Path=ModsVm.SelectedMod.Homepage, Converter={StaticResource ValueToVisibilityConverter}}" Foreground="{StaticResource AccentColorLight}" TextDecorations="Underline" TextTrimming="CharacterEllipsis">
                                        <Hyperlink Command="{Binding Path=ModsVm.OpenHyperlinkCmd}" CommandParameter="homepage" Foreground="{StaticResource AccentColorLight}">
                                            <Run Text="{Binding Path=ModsVm.SelectedMod.Homepage, FallbackValue=Homepage}" />
                                        </Hyperlink>
                                    </TextBlock>
                                </StackPanel>
                                
                                <!-- Dependencies -->
                                <TextBlock Grid.Row="1" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Dependencies" Visibility="{Binding Path=ModsVm.SelectedMod.DependenciesCollection.Count, Converter={StaticResource ValueToVisibilityConverter}}" />
                                <StackPanel Grid.Row="1" Grid.Column="1" Visibility="{Binding Path=ModsVm.SelectedMod.DependenciesCollection.Count, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0,-4,0,0">
                                    
                                    <!-- required -->
                                    <ListBox Style="{StaticResource GenericListBox}" ItemsSource="{Binding Source={StaticResource DependenciesVs}}" SelectedItem="{Binding Path=ModsVm.SelectedDependency}" Margin="0,0,0,8">
                                        <ListBox.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource DependeciesListBoxItem}" TargetType="{x:Type ListBoxItem}">
                                                <!-- null -->
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="8,4">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Orientation="Horizontal">

                                                        <!-- Optional -->
                                                        <TextBlock>
                                                            <TextBlock.Style>
                                                                <Style BasedOn="{StaticResource PropertyDescriptorTextBlock}" TargetType="{x:Type TextBlock}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Path=IsOptional}" Value="True">
                                                                            <Setter Property="Text" Value="OPTIONAL:" />
                                                                            <Setter Property="Margin" Value="0,0,8,0" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>

                                                        <!-- Name -->
                                                        <TextBlock Text="{Binding Path=Name}" />

                                                    </StackPanel>

                                                    <!-- Is installed -->
                                                    <TextBlock Grid.Column="1">
                                                        <TextBlock.Style>
                                                            <Style BasedOn="{StaticResource PropertyDescriptorTextBlock}" TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="Not installed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsInstalled}" Value="True">
                                                                        <Setter Property="Text" Value="Installed" />
                                                                        <Setter Property="Foreground" Value="#B2FFFFFF" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Install mod" Command="{Binding Path=ModsVm.InstallDependencyModCmd}" IsEnabled="{Binding Path=ModsVm.SelectedDependency.IsInstalled, Converter={StaticResource InvertedBooleanConverter}}" />
                                            </ContextMenu>
                                        </ListBox.ContextMenu>
                                    </ListBox>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>

            <!-- Root - Settings -->
            <Grid Row="1" Background="#FF1E1E1E" Visibility="{Binding ElementName=SettingsButton, Path=IsChecked, Converter={StaticResource ValueToVisibilityConverter}}" Margin="0,5,0,0">
                <Grid Margin="20,30,20,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Factorio settings" />
                    <StackPanel Grid.Column="1" Grid.Row="0" Margin="0,0,0,12">
                        <c:DescriptionTextBox DescriptionText="Factorio path" Text="{Binding Path=ConfigVm.FactorioPath, Mode=TwoWay}" />
                        <c:DescriptionTextBox DescriptionText="Mods folder path" Text="{Binding Path=ConfigVm.ModsPath, Mode=TwoWay}" />
                        <StackPanel Margin="0,0,0,12">
                            <TextBlock Style="{StaticResource PropertyDescriptorTextBlock}" Text="Current Factorio Branch" />
                            <TextBlock Style="{StaticResource PropertyValueTextBlock}" Text="{Binding Path=ConfigVm.CurrentFactorioBranch}" />
                        </StackPanel>
                    </StackPanel>
                    
                    <!-- app settings -->
                    <TextBlock Grid.Column="0" Grid.Row="1" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Application settings" />
                    <StackPanel Grid.Column="1" Grid.Row="1" Margin="0,0,0,12">
                        <CheckBox Style="{StaticResource SettingsCheckBox}" IsChecked="{Binding Path=ConfigVm.AutoCheckModUpdate, Mode=TwoWay}" Content="Check for mod updates at startup" />
                        <CheckBox Style="{StaticResource SettingsCheckBox}" IsChecked="{Binding Path=ConfigVm.AutoDownloadModUpdate, Mode=TwoWay}" Content="Update mods automatically" />
                        <Button Content="Reset application size and posistion" Command="{Binding Path=ConfigVm.ResetWindowPosDimCmd}" Padding="12,4" HorizontalAlignment="Left" />
                    </StackPanel>

                    <TextBlock Grid.Column="0" Grid.Row="2" Style="{StaticResource PropertyGroupDescriptorTextBlock}" Text="Mod portal settings" />
                    <StackPanel Grid.Column="1" Grid.Row="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <c:DescriptionTextBox DescriptionText="Username" Text="{Binding Path=ConfigVm.ModPortalUsername, Mode=TwoWay}" Margin="0,0,12,0" />
                            <c:DescriptionTextBox Grid.Column="1" DescriptionText="Authentication Token" Text="{Binding Path=ConfigVm.ModPortalAuthToken, Mode=TwoWay}" IsPasswordBox="True" />
                        </Grid>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        
        <!-- Message Box -->
        <AdornerDecorator x:Name="AdornerMessageBox" MaxHeight="200" MinWidth="400" MaxWidth="600" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2" Visibility="{Binding Path=MessageBoxRelay.ShowMessageBox, Converter={StaticResource ValueToVisibilityConverter}}">
            <Border Background="#E5111111" CornerRadius="10">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="9" Direction="0" Opacity="0.53" RenderingBias="Quality" ShadowDepth="0" />
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Margin="20">
                        <TextBlock Text="{Binding Path=MessageBoxRelay.MessageBoxTitle}" Foreground="#B2FFFFFF" Margin="0,0,0,12" FontSize="17" TextWrapping="Wrap" />
                        <TextBlock Text="{Binding Path=MessageBoxRelay.MessageBoxValue}" Foreground="#7FFFFFFF" TextWrapping="Wrap" />
                    </StackPanel>
                    <c:IconButton Grid.Column="1" Style="{StaticResource NotifyButton}" Icon="{StaticResource IconClose}" Command="{Binding Path=MessageBoxRelay.CloseMessageBoxCmd}" VerticalAlignment="Top" Margin="5" ToolTip="Close" />
                </Grid>
            </Border>
        </AdornerDecorator>

        <!-- Notify banner -->
        <AdornerDecorator x:Name="AdornerNotify" Height="35" MinWidth="400" Margin="0,0,0,15" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.RowSpan="2" Visibility="{Binding Path=NotifyBannerRelay.ShowNotifyBanner, Converter={StaticResource ValueToVisibilityConverter}}">
            <Border Background="#CC111111" CornerRadius="12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding Path=NotifyBannerRelay.NotifyBannerValue}" Foreground="#7FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="25,0,0,0" />
                    <c:IconButton Grid.Column="1" Style="{StaticResource NotifyButton}" Icon="{StaticResource IconClose}" Command="{Binding Path=NotifyBannerRelay.CloseNotifyBannerCmd}" Margin="0,0,5,0" ToolTip="Close" />
                </Grid>
            </Border>
        </AdornerDecorator>

        <!-- Update notify banner -->
        <AdornerDecorator x:Name="AdornerUpdateNotify" VerticalAlignment="Bottom" Grid.RowSpan="2" Visibility="{Binding Path=ModsVm.IsUpdating, Converter={StaticResource ValueToVisibilityConverter}}">
            <Border Background="#CC111111">
                <Grid>
                    <StackPanel Margin="50,15">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Foreground="#B2FFFFFF" Margin="0,0,0,5" TextTrimming="CharacterEllipsis">
                                <Run Text="{Binding Path=ModsVm.CurrentUpdatingMod.Title, StringFormat={}Updating: {0}, TargetNullValue='Warming up...', FallbackValue='Warming up...'}" />
                                <Run Text="{Binding Path=ModsVm.CurrentUpdatingMod.ProgressPercentage, StringFormat={} - {0}%}" />
                            </TextBlock>
                            <TextBlock Grid.Column="1" Text="{Binding Path=ModsVm.UpdateTotalProgress, StringFormat={}Total: {0}%}" Foreground="#B2FFFFFF" HorizontalAlignment="Right" Margin="0,0,0,5" />
                        </Grid>
                        <ProgressBar Foreground="{StaticResource AccentColorLightMuted}" Height="2" BorderBrush="Transparent" Background="Transparent" Value="{Binding Path=ModsVm.CurrentUpdatingMod.ProgressPercentage}" Margin="0,0,0,1" />
                        <ProgressBar Foreground="{StaticResource AccentColorLight}" Height="4" BorderBrush="Transparent" Background="Transparent" Value="{Binding Path=ModsVm.UpdateTotalProgress}" />
                    </StackPanel>
                </Grid>
            </Border>
        </AdornerDecorator>

        <!--  Apply button  -->
        <AdornerDecorator x:Name="AdornerApplyButton" Width="80" Height="80" Margin="0,60,15,0" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2">
            <c:IconButton Style="{StaticResource LaunchButton}" Command="{Binding Path=ModsVm.LaunchFactorioCmd}">
                <c:IconButton.Effect>
                    <DropShadowEffect BlurRadius="9" Direction="0" Opacity="0.53" RenderingBias="Quality" ShadowDepth="0" />
                </c:IconButton.Effect>
                <c:IconButton.IsEnabled>
                    <MultiBinding Converter="{StaticResource InvertedBooleanMultiConverter}">
                        <Binding Path="ModsVm.IsUpdating" />
                        <Binding Path="ModsVm.IsCheckingForUpdates" />
                    </MultiBinding>
                </c:IconButton.IsEnabled>
            </c:IconButton>
        </AdornerDecorator>
    </Grid>
</Window>
